{"version":3,"sources":["page/components/AddTodo.js","page/action.js","page/components/VisibleTodoList.js","page/components/Link.js","page/components/Footer.js","page/index.js","page/reducer.js","index.js"],"names":["AddTodo","_this","this","react_default","a","createElement","onSubmit","e","preventDefault","addTodoClick","input","ref","node","type","value","trim","props","addTodoAction","Component","connect","dispatch","text","complete","addTodo","VisibleTodoList","_this$props","todos","liClick","filter","filterTodos","showTodosByFilter","map","todo","key","id","style","textDecoration","onClick","state","ownProps","PageReducer","toggleTodo","Link","children","active","href","Footer","components_Link","linkClick","bind","filterVisible","Page","components_AddTodo","components_VisibleTodoList","components_Footer","textId","initState","reducers","combineReducers","arguments","length","undefined","action","Object","objectSpread","toConsumableArray","concat","newTodos","assign","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","render","es","page","document","getElementById"],"mappings":"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","file":"static/js/main.a82b2047.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../action\";\n\nclass AddTodo extends Component {\n  render() {\n    return (\n      <div>\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            this.addTodoClick(this.input);\n          }}\n        >\n          <input\n            ref={node => {\n              this.input = node;\n            }}\n          />\n          <button type=\"submit\">Add Todo</button>\n        </form>\n      </div>\n    );\n  }\n\n  addTodoClick(input) {\n    if (!input.value.trim()) {\n      return;\n    }\n    this.props.addTodoAction(input.value);\n    input.value = \"\";\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTodoAction: text => {\n      dispatch(addTodo(text));\n    }\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(AddTodo);\n","export const addTodo = (text) => {\n    return {\n        type: 'ADD_TODOS',\n        text,\n        complete: false\n    }\n}\n\nexport const toggleTodo = (id) => {\n    return {\n        type: 'TOGGLE_TODO',\n        id\n    }\n}\n\nexport const filterVisible = (filter) => {\n    return {\n        type: 'FILTER_VISIBLE',\n        filter\n    }\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleTodo } from \"../action\";\n\nclass VisibleTodoList extends Component {\n  render() {\n    const { todos, liClick, filter} = this.props;\n\n    const filterTodos = this.showTodosByFilter(todos,filter);\n\n    return (\n      <ul>\n        {filterTodos &&\n          filterTodos.map(todo => (\n            <li\n              key={todo.id}\n              style={{\n                textDecoration: todo.complete ? \"line-through\" : \"none\"\n              }}\n              onClick={() => liClick(todo.id)}\n            >\n              {todo.text}\n            </li>\n          ))}\n      </ul>\n    );\n  }\n\n  showTodosByFilter(todos,filter) {\n    if (filter === 'FILTER_COMPLETED') {\n      return todos.filter(todo => todo.complete);\n    } else if (filter === 'FILTER_ACTIVE') {\n      return todos.filter(todo => !todo.complete);\n    } else if(filter === 'FILTER_ALL') {\n      return todos;\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    todos: state.PageReducer.todos,\n    filter: state.PageReducer.filter\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    liClick: (id) => {\n      dispatch(toggleTodo(id))\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(VisibleTodoList);\n","import React, { Component } from \"react\";\n\nclass Link extends Component {\n  render() {\n    let children = this.props.children;\n    let active = this.props.active;\n    let onClick = this.props.onClick;\n    \n    if (active) {\n      return <span>{children}</span>;\n    }\n\n    return (\n      <a\n        href=\"\"\n        onClick={e => {\n          e.preventDefault();\n          onClick();\n        }}\n      >\n        {children}\n      </a>\n    );\n  }\n}\n\nexport default Link;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterVisible } from \"../action\";\nimport Link from \"./Link\";\n\nclass Footer extends Component {\n\n  render() {\n    let active = this.props.active;\n    return (\n      <p>\n        Show:\n        <Link filter=\"FILTER_ALL\" onClick={this.props.linkClick.bind(this,'FILTER_ALL')} active={active === 'FILTER_ALL'}>\n          All\n        </Link>\n        ,\n        <Link filter=\"FILTER_ACTIVE\" onClick={this.props.linkClick.bind(this,'FILTER_ACTIVE')} active={active === 'FILTER_ACTIVE'}>\n          Active\n        </Link>\n        ,\n        <Link filter=\"FILTER_COMPLETED\" onClick={this.props.linkClick.bind(this,'FILTER_COMPLETED')} active={active === 'FILTER_COMPLETED'}>\n          Completed\n        </Link>\n      </p>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    active: state.PageReducer.filter\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    linkClick: (filter) => {\n      dispatch(filterVisible(filter));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Footer);\n","import React, { Component } from \"react\";\nimport AddTodo from \"./components/AddTodo\";\nimport VisibleTodoList from \"./components/VisibleTodoList\";\nimport Footer from \"./components/Footer\";\n\nclass Page extends Component {\n  render() {\n    return (\n      <div>\n        <AddTodo />\n        <VisibleTodoList />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Page;\n","let textId = 0;\nlet initState = {\n  todos: [],\n  filter: \"FILTER_ALL\"\n};\n\n//注意此处state的设置，对于全局的store而言，每个reducer文件都会在此store下挂载各自文件对应的变量，\n//由于各自文件里的state的变量不一定全是数据或者对象，所以需要在initState变量中设置有哪些变量，然后再reducer中，对各个action对应的变量分别处理\n//这种方式按照页面拆分reducer比较实际。。。如果说不同的数据类型拆分不同的reducer则比较繁琐不切实际了\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case \"ADD_TODOS\":\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          {\n            id: textId++,\n            text: action.text\n          }\n        ]\n      };\n    /* return [...state,{\n        id: textId++,\n        text: action.text\n      }] */\n    case \"TOGGLE_TODO\":\n      const newTodos = state.todos.map(\n        todo =>\n          todo.id === action.id\n            ? Object.assign(todo, { complete: !todo.complete })\n            : todo\n      );\n      return {\n        ...state,\n        todos: newTodos\n      };\n    /* return state.map(\n        todo =>\n          todo.id === action.id\n            ? Object.assign(todo, { complete: !todo.complete })\n            : todo\n      ); */\n    case \"FILTER_VISIBLE\":\n      return {\n        ...state,\n        filter: action.filter\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore,combineReducers } from \"redux\";\nimport App from \"./page\";\nimport PageReducer from \"./page/reducer\";\n\nconst reducers = combineReducers({PageReducer});\n\nlet store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}